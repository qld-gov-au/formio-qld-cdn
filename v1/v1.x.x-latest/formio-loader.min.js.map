{"version":3,"file":"formio-loader.min.js","mappings":"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","sources":["webpack://formio-qld/webpack/universalModuleDefinition","webpack://formio-qld/./src/config/createForm.options.js","webpack://formio-qld/webpack/bootstrap","webpack://formio-qld/webpack/runtime/compat get default export","webpack://formio-qld/webpack/runtime/define property getters","webpack://formio-qld/webpack/runtime/hasOwnProperty shorthand","webpack://formio-qld/webpack/runtime/make namespace object","webpack://formio-qld/./src/config/createForm.controller.js","webpack://formio-qld/./src/helpers/FormioLoader/FormioLoader.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FormioLoader\"] = factory();\n\telse\n\t\troot[\"FormioLoader\"] = factory();\n})(globalThis, function() {\nreturn ","module.exports = {\n  // Turn off default buttons\n  buttonSettings: {\n    showCancel: false,\n    showPrevious: true,\n    showNext: true,\n    showSubmit: true,\n  },\n  i18n: {\n    en: {\n      pattern: \"Must use the format shown\",\n      error:\n        '<h2><span class=\"fa fa-exclamation-triangle\"></span> Please check your answers</h2>',\n    },\n  },\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default ({ form, formConfirmation }) => {\n  // Change event/GTM\n  form.on(\"click\", (e) => {\n    // eslint-disable-next-line no-underscore-dangle\n    const formTitle = form._form.title;\n    // eslint-disable-next-line no-underscore-dangle\n    const formModified = form._form.modified;\n    if (\n      typeof e.changed !== \"undefined\" &&\n      typeof e.changed.component !== \"undefined\"\n    ) {\n      window.dataLayer = window.dataLayer || [];\n      window.dataLayer.push({\n        event: \"formio-interaction\",\n        \"formio-name\": formTitle,\n        \"formio-input-id\": e.changed.component.id,\n        \"formio-input-type\": e.changed.component.type,\n        \"formio-input-value\": e.changed.component.value,\n        \"formio-input-key\": e.changed.component.key,\n        \"formio-input-label-raw\": e.changed.component.label,\n        \"formio-version\": formModified,\n        \"formio-category\": `Form: ${formTitle}`,\n        \"formio-action\": \"Value changed\",\n      });\n    }\n  });\n\n  form.on(\"submitDone\", () => {\n    if (formConfirmation) window.location.href = formConfirmation;\n  });\n};\n","import defaultCreateFormOptions from \"../../config/createForm.options\";\nimport defaultCreateFormController from \"../../config/createForm.controller\";\n\n// polyfill plugin function to fix the namespace option doesn't pass to Formio.makeRequest\nconst NamespacePlugin = {\n  priority: 0,\n  preRequest(requestArgs) {\n    if (requestArgs.formio) {\n      const formioInstance = document.querySelector(\n        `[data-formio-form-url=\"${requestArgs.formio.formUrl}\"]`\n      );\n      if (formioInstance) {\n        requestArgs.formio = JSON.parse(formioInstance.dataset.formio);\n        requestArgs.opts.formio = requestArgs.formio;\n      }\n      if (requestArgs.formio.options)\n        requestArgs.opts.namespace = requestArgs.formio.options.namespace;\n    }\n    return Promise.resolve(null);\n  },\n};\n\nconst initFormioInstance = (elem, opts) => {\n  // if already initiated, reject\n  if (elem.dataset.formioFormUrl) return;\n\n  // if doesn't have required options, reject\n  if (!opts.envUrl || !opts.projectName || !opts.formName) {\n    console.warn(\n      \"Require envUrl, projectName, formName to initiate the form.\",\n      opts\n    );\n    return;\n  }\n  /*\n   * setup config\n   */\n  const baseUrl = `https://${opts.envUrl.trim()}`;\n  let formName = \"\";\n  // Check if value is true/exists and is numeric\n  if (opts.form_revision) {\n    formName = `${opts.formName}/v/${opts.form_revision}`;\n  } else {\n    formName = opts.formName;\n  }\n  const { projectName } = opts;\n  const namespace = opts.namespace || `formio-${projectName}`;\n  const formUrl = `${baseUrl}/${projectName}/${formName}`;\n\n  /*\n   * init formio instance\n   */\n  const formio = new Formio(formUrl, {\n    base: baseUrl,\n    project: `${baseUrl}/${projectName}`,\n    namespace,\n  });\n  elem.dataset.formio = JSON.stringify(formio);\n  elem.dataset.formioFormUrl = formUrl;\n\n  /*\n   * load formio form\n   */\n  const defaultOptions = {\n    ...defaultCreateFormOptions,\n    formio,\n    namespace: formio.options.namespace,\n  };\n\n  const combinedOptions = {\n    ...defaultOptions,\n    // combine with hook options\n    ...(typeof opts.createFormOptions === \"function\" &&\n      opts.createFormOptions({\n        envUrl: opts.envUrl,\n        projectName: opts.projectName,\n        formName: opts.formName,\n        defaultOptions,\n        elem,\n      })),\n  };\n\n  // register plugin\n  if (!Formio.getPlugin(\"namespacePolyfill\"))\n    Formio.registerPlugin(NamespacePlugin, \"namespacePolyfill\");\n\n  Formio.createForm(elem, formUrl, combinedOptions).then((form) => {\n    form.formio = formio;\n    form.options.formio = formio;\n    const callbackProps = {\n      form,\n      elem,\n      envUrl: opts.envUrl,\n      projectName: opts.projectName,\n      formName: opts.formName,\n    };\n\n    if (typeof opts.createFormCallback === \"function\") {\n      // call custom callback hook\n      opts.createFormCallback(callbackProps);\n    } else {\n      // Force new tab on formlinks\n      $(elem).on(\"click\", `a`, (e) => {\n        e.target.target = \"_blank\";\n      });\n    }\n\n    // default controller\n    defaultCreateFormController(callbackProps);\n\n    // call custom hook controller\n    if (typeof opts.createFormController === \"function\") {\n      opts.createFormController(callbackProps);\n    }\n  });\n};\n\nconst defaultInitFormioAction = () => {\n  // customise error message\n  const newFunc = Formio.Form.prototype.errorForm.bind({});\n  Formio.Form.prototype.errorForm = (err) => {\n    if (\n      (typeof err === \"string\" &&\n        err.indexOf(\"Could not connect to API server\") !== -1) ||\n      (typeof err === \"object\" && err.networkError)\n    ) {\n      console.warn(\"formio error: \", err);\n      return newFunc(\n        \"This form is currently unavailable due to maintenance. Please try again later.\"\n      );\n    }\n    return newFunc(err);\n  };\n};\n\nconst initFormio = () => {\n  // Init form\n  Formio.icons = \"fontawesome\";\n  if (premium) Formio.use(premium);\n\n  // default callback after Formio is loaded\n  if (typeof window.initFormioHook === \"function\") {\n    window.initFormioHook();\n  } else {\n    defaultInitFormioAction();\n  }\n\n  document.querySelectorAll(\"[data-formio]\").forEach((elem) => {\n    const {\n      formioProjectName,\n      formioFormName,\n      formioEnvUrl,\n      formioPdfDownload,\n      formioFormConfirmation,\n      formioFormRevision,\n      formioNamespace,\n      formioCreateformOptions,\n      formioCreateformController,\n      formioCreateformCallback,\n    } = elem.dataset;\n    initFormioInstance(elem, {\n      projectName: formioProjectName,\n      formName: formioFormName,\n      envUrl: formioEnvUrl,\n      pdfDownload: formioPdfDownload,\n      formConfirmation: formioFormConfirmation,\n      formRevision: formioFormRevision,\n      namespace: formioNamespace,\n      createFormOptions: window[formioCreateformOptions],\n      createFormController: window[formioCreateformController],\n      createFormCallback: window[formioCreateformCallback],\n    });\n  });\n};\n\nexport { initFormio, initFormioInstance };\n"],"names":["root","factory","exports","module","define","amd","globalThis","buttonSettings","showCancel","showPrevious","showNext","showSubmit","i18n","en","pattern","error","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","NamespacePlugin","priority","preRequest","requestArgs","formio","formioInstance","document","querySelector","formUrl","JSON","parse","dataset","opts","options","namespace","Promise","resolve","initFormioInstance","elem","formioFormUrl","envUrl","projectName","formName","console","warn","baseUrl","trim","form_revision","Formio","base","project","stringify","defaultOptions","defaultCreateFormOptions","combinedOptions","createFormOptions","getPlugin","registerPlugin","createForm","then","form","callbackProps","createFormCallback","$","on","e","target","formConfirmation","formTitle","_form","title","formModified","modified","changed","component","window","dataLayer","push","event","id","type","label","location","href","defaultCreateFormController","createFormController","initFormio","icons","premium","use","initFormioHook","newFunc","Form","errorForm","bind","err","indexOf","networkError","defaultInitFormioAction","querySelectorAll","forEach","formioProjectName","formioFormName","formioEnvUrl","formioPdfDownload","formioFormConfirmation","formioFormRevision","formioNamespace","formioCreateformOptions","formioCreateformController","formioCreateformCallback","pdfDownload","formRevision"],"sourceRoot":""}